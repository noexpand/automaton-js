{"version":3,"sources":["../src/uri.js"],"names":["uri","evaluateParams","params","usedInPath","p","sep","name","hasOwnProperty","value","undefined","encodeURIComponent","replacePathVariables","location","replace","match","Error","containsContextPath","hPos","indexOf","substring","qPos","current","url","parse","Object","assign","query","result","config","contextPath"],"mappings":";;;;;kBAkDwBA,G;;AAlDxB;;;;AAEA;;;;;;AAGA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,UAAhC,EACA;AACI,QAAIC,IAAI,EAAR;AACA,QAAIF,MAAJ,EACA;AACI,YAAIG,MAAM,GAAV;AACA,aAAK,IAAIC,IAAT,IAAiBJ,MAAjB,EACA;AACI,gBAAIA,OAAOK,cAAP,CAAsBD,IAAtB,KAA+B,CAACH,WAAWG,IAAX,CAApC,EACA;AACI,oBAAME,QAAQN,OAAOI,IAAP,CAAd;AACA,oBAAIE,UAAUC,SAAd,EACA;AACIL,yBAAKC,MAAMK,mBAAmBJ,IAAnB,CAAN,GAAiC,GAAjC,GAAuCI,mBAAmBF,KAAnB,CAA5C;AACAH,0BAAM,GAAN;AACH;AACJ;AACJ;AACJ;AACD,WAAOD,CAAP;AACH;;AAGD,SAASO,oBAAT,CAA8BC,QAA9B,EAAwCV,MAAxC,EAAgDC,UAAhD,EACA;AACI,WAAOS,SAASC,OAAT,CAAiB,qBAAjB,EAAwC,UAAUC,KAAV,EAAiBR,IAAjB,EAAuB;AAClE,YAAME,QAAQN,UAAUA,OAAOI,IAAP,CAAxB;AACA,YAAIE,UAAUC,SAAd,EACA;AACI,kBAAM,IAAIM,KAAJ,CAAU,8BAA8BT,IAA9B,GAAqC,QAArC,GAAgDM,QAAhD,GAA2D,GAArE,CAAN;AACH;AACDT,mBAAWG,IAAX,IAAmB,IAAnB;AACA,eAAOE,KAAP;AACH,KARM,CAAP;AASH;;AAGD;;;;;;;;AAQe,SAASR,GAAT,CAAaY,QAAb,EAAuBV,MAAvB,EAA+Bc,mBAA/B,EAAoD;AAC/D,QAAMb,aAAa,EAAnB;;AAEAS,eAAWD,qBAAqBC,QAArB,EAA+BV,MAA/B,EAAuCC,UAAvC,CAAX;;AAEA,QAAMc,OAAOL,SAASM,OAAT,CAAiB,GAAjB,CAAb;AACA,QAAID,QAAQ,CAAZ,EACA;AACIL,mBAAWA,SAASO,SAAT,CAAmB,CAAnB,EAAsBF,IAAtB,CAAX;AACH;AACD,QAAMG,OAAOR,SAASM,OAAT,CAAiB,GAAjB,CAAb;AACA,QAAIE,QAAQ,CAAZ,EACA;AACI,YAAMC,UAAUC,cAAIC,KAAJ,CAAUX,QAAV,EAAoB,IAApB,CAAhB;AACAV,iBAASsB,OAAOC,MAAP,CAAcJ,QAAQK,KAAtB,EAA6BxB,MAA7B,CAAT;AACAU,mBAAWA,SAASO,SAAT,CAAmB,CAAnB,EAAsBC,IAAtB,CAAX;AACH;;AAED,QAAMO,SAAS,CAACX,sBAAsB,EAAtB,GAA2BY,iBAAOC,WAAnC,IAAkDjB,QAAlD,GAA6DX,eAAeC,MAAf,EAAuBC,UAAvB,CAA5E;;AAEA;;AAEA,WAAOwB,MAAP;AACH","file":"uri.js","sourcesContent":["import url from \"url\";\n\nimport config from \"./config\";\n\n\nfunction evaluateParams(params, usedInPath)\n{\n    let p = \"\";\n    if (params)\n    {\n        let sep = \"?\";\n        for (let name in params)\n        {\n            if (params.hasOwnProperty(name) && !usedInPath[name])\n            {\n                const value = params[name];\n                if (value !== undefined)\n                {\n                    p += sep + encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n                    sep = \"&\";\n                }\n            }\n        }\n    }\n    return p;\n}\n\n\nfunction replacePathVariables(location, params, usedInPath)\n{\n    return location.replace(/{([0-9a-z_]+)\\??}/gi, function (match, name) {\n        const value = params && params[name];\n        if (value === undefined)\n        {\n            throw new Error(\"Undefined path variable '\" + name + \"' in '\" + location + \"'\");\n        }\n        usedInPath[name] = true;\n        return value;\n    });\n}\n\n\n/**\n * Formats a local URI with path patterns and parameters.\n *\n * @param {String} location                 local location e.g. \"/app/process/{name}\"\n * @param {Object} [params]                   path variable or HTTP parameter to add to the URI. If a parameter name is not present as a path variable, it is used as HTTP parameter.\n * @param {boolean} [containsContextPath]   if set to true, `location` will be assumed to already contain the context path\n * @return {string}\n */\nexport default function uri(location, params, containsContextPath) {\n    const usedInPath = {};\n\n    location = replacePathVariables(location, params, usedInPath);\n\n    const hPos = location.indexOf(\"#\");\n    if (hPos >= 0)\n    {\n        location = location.substring(0, hPos);\n    }\n    const qPos = location.indexOf(\"?\");\n    if (qPos >= 0)\n    {\n        const current = url.parse(location, true);\n        params = Object.assign(current.query, params);\n        location = location.substring(0, qPos);\n    }\n\n    const result = (containsContextPath ? \"\" : config.contextPath) + location + evaluateParams(params, usedInPath);\n\n    //console.log(\"URI:\", result);\n\n    return result;\n}\n\n"]}