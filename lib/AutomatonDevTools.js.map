{"version":3,"sources":["../src/AutomatonDevTools.js"],"names":["AutomatonDevTools","process","env","NODE_ENV","DEV_TOOLS_CSS","require","devToolsModule","JSONTree","default","ToolbarButton","props","active","onToggle","className","React","Component","DevTools"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AAEA;;AAEA;;AACA;;;;;;;;;;;;AAGA,IAAIA,0BAAJ;AACA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EACA;AACI;AACAH,wBAAoB,MAApB;AACH,CAJD,MAMA;AACI;AACA,QAAMI,gBAAgBC,QAAQ,2BAAR,CAAtB;AACA;AACA,QAAMC,iBAAiBD,QAAQ,qBAAR,CAAvB;;AAEA,QAAME,WAAWF,QAAQ,iBAAR,EAA2BG,OAA5C;;AANJ,QASUC,aATV;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAWQ;AAAA,6BAC0C,KAAKC,KAD/C;AAAA,oBACWC,MADX,UACWA,MADX;AAAA,oBACmBC,QADnB,UACmBA,QADnB;AAAA,oBAC6BC,SAD7B,UAC6BA,SAD7B;;AAEI,uBACI;AAAA;AAAA;AACI,mCAAW,0BAAG,qCAAH,EAA0CF,UAAU,QAApD,CADf;AAEI,iCAASC,QAFb;AAGI,8BAAK,QAHT;AAII,wCAAcD;AAJlB;AAMI,yDAAG,WAAW,SAASE,SAAvB;AANJ,iBADJ;AAUH;AAvBT;;AAAA;AAAA,MASgCC,gBAAMC,SATtC;;AAAA,QA2BoBC,QA3BpB,GA2BiCV,cA3BjC,CA2BWE,OA3BX;;;AA6BIR,wBAAoB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAIZ;AACI,oBAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EACA;AACI,2BAAO,KAAP;AACH;;AAGD,uBACI,8BAAC,QAAD,OADJ;AAGH;AAdW;;AAAA;AAAA,MACFW,gBAAMC,SADJ,EAApB;AAkBH;;kBAEcf,iB","file":"AutomatonDevTools.js","sourcesContent":["import React from \"react\"\nimport cx from \"classnames\"\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { isObservable, toJS } from \"mobx\"\nimport withAutomatonEnv from \"./withAutomatonEnv\";\n\n\nlet AutomatonDevTools;\nif (process.env.NODE_ENV === \"production\")\n{\n    // render as empty span\n    AutomatonDevTools = \"span\";\n}\nelse\n{\n    // noinspection JSUnusedLocalSymbols\n    const DEV_TOOLS_CSS = require(\"../automaton-devtools.css\");\n    // optimization friendly late imports\n    const devToolsModule = require(\"mobx-react-devtools\");\n\n    const JSONTree = require(\"react-json-tree\").default;\n\n\n    class ToolbarButton extends React.Component {\n        render()\n        {\n            const {active, onToggle, className} = this.props;\n            return (\n                <button\n                    className={cx(\"btn btn-sm pl-1 pt-1 pr-1 pb-0 mr-1\", active && \"active\")}\n                    onClick={onToggle}\n                    role=\"button\"\n                    aria-pressed={active}\n                >\n                    <i className={\"fas \" + className}/>\n                </button>\n            );\n        }\n    }\n\n\n    const {default: DevTools } = devToolsModule;\n\n    AutomatonDevTools = withAutomatonEnv(\n        class extends React.Component {\n\n            render()\n            {\n                if (process.env.NODE_ENV === \"production\")\n                {\n                    return false;\n                }\n\n\n                return (\n                    <DevTools />\n                )\n            }\n        }\n    )\n\n}\n\nexport default AutomatonDevTools\n\n"]}