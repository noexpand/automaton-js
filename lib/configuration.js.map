{"version":3,"sources":["../src/configuration.js"],"names":["DEFAULT_OPTS","contextPath","scopeSyncTimeout","layout","DefaultLayout","translations","appScope","userScope","sessionScope","localScope","auth","inputSchema","appName","rootProcess","locale","authentication","csrfToken","ensureValid","property","hasOwnProperty","Error","VALID_KEYS","Object","keys","Proxy","get","config","set","value","apply","target","thisArg","argumentsList","console","log"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAGO,IAAMA,sCAAe;AACxBC,iBAAa,EADW;AAExBC,sBAAkB,IAFM;AAGxBC,YAAQC,uBAHgB;AAIxBC,kBAAc,EAJU;;AAMxB;AACAC,cAAU,IAPc;AAQxBC,eAAW,IARa;AASxBC,kBAAc,IATU;AAUxBC,gBAAY,IAVY;;AAYxBC,UAAM,IAZkB;AAaxBC,iBAAa,IAbW;;AAexBC,aAAS,IAfe;AAgBxBC,iBAAa,IAhBW;AAiBxBC,YAAQ,IAjBgB;AAkBxBC,oBAAgB,IAlBQ;AAmBxBC,eAAW;AAnBa,CAArB;;AAsBP,SAASC,WAAT,CAAqBC,QAArB,EACA;AACI,QAAI,CAAClB,aAAamB,cAAb,CAA4BD,QAA5B,CAAL,EACA;AACI,cAAM,IAAIE,KAAJ,CAAU,yBAAyBF,QAAnC,CAAN;AACH;AACJ;;AAED,IAAMG,aAAaC,OAAOC,IAAP,CAAYvB,YAAZ,CAAnB;;AAEA;;;;;kBAKe,IAAIwB,KAAJ,CACX,YAAY,CAEX,CAHU,EAIX;AACIC,SAAK,aAASC,MAAT,EAAiBR,QAAjB,EACL;AACI,YAAIA,aAAa,MAAjB,EACA;AACI,mBAAOG,UAAP;AACH;;AAEDJ,oBAAYC,QAAZ;;AAEA,eAAOQ,OAAOR,QAAP,CAAP;AACH,KAXL;AAYIS,SAAK,aAASD,MAAT,EAAiBR,QAAjB,EAA2BU,KAA3B,EACL;AACIX,oBAAYC,QAAZ;;AAEAQ,eAAOR,QAAP,IAAmBU,KAAnB;;AAEA,eAAO,IAAP;AACH,KAnBL;AAoBIC,WAAO,eAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EACP;AACIC,gBAAQC,GAAR,CAAY,OAAZ,EAAoBJ,MAApB,EAA4BC,OAA5B,EAAqCC,aAArC;AACA,eAAOX,UAAP;AACH;AAxBL,CAJW,C","file":"configuration.js","sourcesContent":["import React from \"react\"\nimport DefaultLayout from \"./ui/DefaultLayout\";\n\n\nexport const DEFAULT_OPTS = {\n    contextPath: \"\",\n    scopeSyncTimeout: 3000,\n    layout: DefaultLayout,\n    translations: {},\n\n    // standard scopes, might not exist in application\n    appScope: null,\n    userScope: null,\n    sessionScope: null,\n    localScope: null,\n\n    auth: null,\n    inputSchema: null,\n\n    appName: null,\n    rootProcess: null,\n    locale: null,\n    authentication: null,\n    csrfToken: null\n};\n\nfunction ensureValid(property)\n{\n    if (!DEFAULT_OPTS.hasOwnProperty(property))\n    {\n        throw new Error(\"Invalid config key: \" + property);\n    }\n}\n\nconst VALID_KEYS = Object.keys(DEFAULT_OPTS);\n\n/**\n * Configuration object\n *\n * @type {{scopeSyncTimeout: number, layout: React.Component, translations: object, contextPath: String}}\n */\nexport default new Proxy(\n    function () {\n        \n    },\n    {\n        get: function(config, property)\n        {\n            if (property === \"keys\")\n            {\n                return VALID_KEYS;\n            }\n\n            ensureValid(property);\n\n            return config[property];\n        },\n        set: function(config, property, value)\n        {\n            ensureValid(property);\n\n            config[property] = value;\n\n            return true;\n        },\n        apply: function(target, thisArg, argumentsList)\n        {\n            console.log(\"apply\",target, thisArg, argumentsList);\n            return VALID_KEYS;\n        }\n    }\n);\n"]}