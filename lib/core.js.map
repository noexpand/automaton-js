{"version":3,"sources":["../src/core.js"],"names":["reinitializeSessionScope","reinitializeLocalScope","startup","SCOPES_MODULE_NAME","unlistenHistory","defaultInit","ctx","initial","appName","locale","translations","contextPath","authentication","csrfToken","processName","schema","appScopeFromInitial","APP_SCOPE","userScopeFromInitial","USER_SCOPE","config","history","basename","auth","Authentication","inputSchema","InputSchema","rootProcess","promises","keys","indexOf","scopesModule","AppScope","UserScope","SessionScope","LocalScope","appScope","userScope","sessionScope","SESSION_SCOPE","sessionStorage","push","localScope","LOCAL_SCOPE","localStorage","Promise","all","resolve","init","getSyncOpts","name","configValue","scopeSyncTimeout","delay","DEFAULT_OPTS","setupScopeSynchronization","login","initFn","then","listen","onHistoryAction","input","injections","catch","console","error","err"],"mappings":"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","file":"core.js","sourcesContent":["import { loadProcessDefinitions, onHistoryAction, renderProcess } from \"./Process\"\nimport config, { DEFAULT_OPTS } from \"./config\"\nimport Authentication from \"./auth\"\nimport InputSchema from \"domainql-form/lib/InputSchema\"\nimport { autorun } from \"mobx\"\nimport uri from \"./uri\"\nimport { serverSync, storageSync, syncFrom, syncFromStorage } from \"./sync\"\n\nimport { APP_SCOPE, LOCAL_SCOPE, SESSION_SCOPE, USER_SCOPE } from \"./scopeNames\"\n\nimport createHistory from \"history/createBrowserHistory\"\n\nconst SCOPES_MODULE_NAME = \"./scopes.js\";\n\nlet unlistenHistory;\n\n\n/**\n * Default automaton initialization procedure for automaton apps. This is what happens before the user-provided\n * config function in `app-startup.js` is called.\n *\n * @param ctx           webpack require context\n * @param initial       initial data\n * @return {Promise<any[] | never>}\n */\nfunction defaultInit(ctx, initial)\n{\n    const {\n        appName,\n        locale,\n        translations,\n        contextPath,\n        authentication,\n        csrfToken,\n        processName,\n        schema,\n        [APP_SCOPE]: appScopeFromInitial,\n        [USER_SCOPE]: userScopeFromInitial\n    } = initial;\n\n    config.history = createHistory({\n        basename: contextPath\n    });\n\n    config.contextPath = contextPath;\n    config.translations = translations;\n\n    config.auth = new Authentication(authentication);\n    config.inputSchema = new InputSchema(schema);\n\n    config.appName = appName;\n    config.locale = locale;\n    config.csrfToken = csrfToken;\n\n    config.rootProcess = processName;\n\n    let promises = [];\n\n    // Initialize scopes if `./scopes.js` module is present\n    const keys = ctx.keys();\n    if (keys.indexOf(SCOPES_MODULE_NAME) >= 0)\n    {\n        const scopesModule = ctx(SCOPES_MODULE_NAME);\n\n        const {AppScope, UserScope, SessionScope, LocalScope} = scopesModule;\n\n        //console.log(\"SCOPES\", {AppScope, UserScope, SessionScope, LocalScope});\n\n        if (AppScope)\n        {\n            const appScope = new AppScope();\n            syncFrom(APP_SCOPE, appScope, appScopeFromInitial);\n            config.appScope = appScope;\n\n        }\n        if (UserScope)\n        {\n            const userScope = new UserScope();\n            syncFrom(USER_SCOPE, userScope, userScopeFromInitial);\n            config.userScope = userScope;\n        }\n\n        if (SessionScope)\n        {\n            const sessionScope = new SessionScope();\n            config.sessionScope = sessionScope;\n            if (!syncFromStorage(SESSION_SCOPE, sessionScope, sessionStorage))\n            {\n                promises.push(\n                    reinitializeSessionScope()\n                )\n            }\n\n        }\n\n        if (LocalScope)\n        {\n            const localScope = new LocalScope();\n            config.localScope = localScope;\n            if (!syncFromStorage(LOCAL_SCOPE, localScope, localStorage))\n            {\n                promises.push(\n                    reinitializeLocalScope()\n                )\n            }\n        }\n    }\n\n    return Promise.all(promises);\n}\n\nexport function reinitializeSessionScope()\n{\n    return Promise.resolve(\n        typeof config[SESSION_SCOPE].init === \"function\" && config[SESSION_SCOPE].init()\n    )\n}\n\n\nexport function reinitializeLocalScope()\n{\n    return Promise.resolve(\n        typeof config[LOCAL_SCOPE].init === \"function\" && config[LOCAL_SCOPE].init()\n    )\n}\n\n/**\n * Returns an options object for autorun with the delay for the given scope and the name of the autorun-action reflecting\n * the name of the scope\n *\n * @param name      scope name\n * @return {{name: *, delay: *}}    options\n */\nfunction getSyncOpts(name)\n{\n    const configValue = config.scopeSyncTimeout;\n\n    let delay;\n    if (typeof configValue === \"number\")\n    {\n        delay = configValue;\n    }\n    else\n    {\n        delay = (configValue && configValue[name]) || DEFAULT_OPTS.scopeSyncTimeout;\n    }\n\n    return {\n        name: \"sync-\" + name,\n        delay\n    }\n}\n\n\nfunction setupScopeSynchronization()\n{\n    const {appScope, userScope, sessionScope, localScope} = config;\n\n    if (appScope)\n    {\n        autorun(() => serverSync(\n            APP_SCOPE,\n            appScope,\n            uri(\n                \"/_auto/sync/app/{appName}\",\n                {\n                    appName: config.appName\n                }\n            )\n            ),\n            getSyncOpts(APP_SCOPE)\n        );\n    }\n\n    const login = config.auth.login;\n    if (userScope && login !== \"anonymous\")\n    {\n        autorun(() => serverSync(\n            USER_SCOPE,\n            userScope,\n            uri(\n                \"/_auto/sync/user/{login}\",\n                {\n                    login: login\n                }\n            )\n            ),\n            getSyncOpts(USER_SCOPE)\n        );\n    }\n\n    if (sessionScope)\n    {\n        autorun(() => storageSync(\n            SESSION_SCOPE,\n            sessionScope,\n            sessionStorage\n            ),\n            getSyncOpts(SESSION_SCOPE)\n        );\n    }\n\n    if (localScope)\n    {\n        autorun(() => storageSync(\n            LOCAL_SCOPE,\n            localScope,\n            localStorage\n            ),\n            getSyncOpts(LOCAL_SCOPE)\n        );\n    }\n}\n\n\n/**\n * Entry point to the automaton client-side process engine\n *\n * @param ctx                   require.context with all .js files\n * @param {Object}initial       initial data pushed from server\n * @param {Function} initFn     init callback\n *\n * @return {ReactElement} initial component output\n */\nexport function startup(ctx, initial, initFn)\n{\n\n    return (\n\n        // AUTOMATON INIT PHASE\n        defaultInit(\n            ctx,\n            initial\n        ).then(\n            // call external init function from startup (might return Promise)\n            () => initFn && initFn(config)\n\n        ).then(\n            () => {\n\n                loadProcessDefinitions(ctx);\n\n                // AUTOMATON RUNTIME PHASE\n                setupScopeSynchronization();\n\n                unlistenHistory = config.history.listen(onHistoryAction);\n\n                return renderProcess(\n                    config.rootProcess,\n                    initial.input,\n                    initial.injections\n                )\n            }\n        )\n        .catch(err => console.error(\"STARTUP ERROR\", err))\n    );\n}\n"]}