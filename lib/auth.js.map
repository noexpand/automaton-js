{"version":3,"sources":["../src/auth.js"],"names":["secret","Symbol","mapRoles","roles","rolesMap","i","length","Authentication","data","hasOwnProperty","login","id"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,SAASC,OAAO,YAAP,CAAf;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EACA;AACI,QAAMC,WAAW,EAAjB;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EACA;AACID,iBAASD,MAAME,CAAN,CAAT,IAAqB,IAArB;AACH;AACD,WAAOD,QAAP;AACH;;IAGoBG,c;AACjB,4BAAYC,IAAZ,EACA;AAAA;;AACI,aAAKR,MAAL,iBACOQ,IADP;AAEIL,mBAAOD,SAASM,KAAKL,KAAd;AAFX;AAIH;;;;;;AAeD;;;;;;kCAOA;AAAA,8CADWA,KACX;AADWA,qBACX;AAAA;;AACI,iBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EACA;AACI,oBAAI,KAAKL,MAAL,EAAaG,KAAb,CAAmBM,cAAnB,CAAkCN,MAAME,CAAN,CAAlC,CAAJ,EACA;AACI,2BAAO,IAAP;AACH;AACJ;AACD,mBAAO,KAAP;AACH;;;4BA3BD;AACI,mBAAO,KAAKL,MAAL,EAAaU,KAApB;AACH;;;4BAID;AACI,mBAAO,KAAKV,MAAL,EAAaW,EAApB;AACH;;;;;;kBAnBgBJ,c","file":"auth.js","sourcesContent":["const secret = Symbol(\"AuthSecret\");\n\n\nfunction mapRoles(roles)\n{\n    const rolesMap = {};\n    for (let i = 0; i < roles.length; i++)\n    {\n        rolesMap[roles[i]] = true;\n    }\n    return rolesMap;\n}\n\n\nexport default class Authentication {\n    constructor(data)\n    {\n        this[secret] = {\n            ...data,\n            roles: mapRoles(data.roles)\n        };\n    }\n\n\n    get login()\n    {\n        return this[secret].login;\n    }\n\n\n    get id()\n    {\n        return this[secret].id;\n    }\n\n\n    /**\n     * Returns true if the user has any of the given roles.\n     *\n     * @param {... String} roles    roles\n     * @return {boolean}\n     */\n    hasRole(...roles)\n    {\n        for (let i = 0; i < roles.length; i++)\n        {\n            if (this[secret].roles.hasOwnProperty(roles[i]))\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n"]}