{"version":3,"sources":["../src/withAutomatonEnv.js"],"names":["withAutomatonEnv","Component","props","env","React","displayName"],"mappings":";;;;;;;;;;kBAawBA,gB;;AAbxB;;;;AACA;;;;AACA;;;;;;;;;;AAGA;;;;;;;;AAQe,SAASA,gBAAT,CAA0BC,SAA1B,EAAqC;AAAA;;AAChD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAOQ;AAAA;;AACI,uBACI;AAAC,yCAAD,CAAc,QAAd;AAAA;AAEQ;AAAA,+BACI,8BAAC,SAAD,eACQ,OAAKC,KADb;AAEI,iCAAKC;AAFT,2BADJ;AAAA;AAFR,iBADJ;AAYH;AApBT;;AAAA;AAAA,MACgCC,gBAAMH,SADtC,UAGeI,WAHf,GAG6B,iBAAiB,8BAAeJ,SAAf,CAAjB,GAA6C,GAH1E;AAuBH","file":"withAutomatonEnv.js","sourcesContent":["import React from \"react\"\nimport getDisplayName from \"./util/getDisplayName\";\nimport { AutomatonEnv } from \"./Process\";\n\n\n/**\n * High-order component to receive all standard enviroment contexts as props.\n *\n * This is not needed for process view component which receive those properties in any case.\n *\n * @param Component\n * @return {React.Component} component with environment props\n */\nexport default function withAutomatonEnv(Component) {\n    return (\n        class WithComponent extends React.Component {\n\n            static displayName = \"withAutoEnv(\" + getDisplayName(Component) + \")\";\n\n\n            render()\n            {\n                return (\n                    <AutomatonEnv.Consumer>\n                        {\n                            env => (\n                                <Component\n                                    {...this.props}\n                                    env={env}\n                                />\n                            )\n                        }\n                    </AutomatonEnv.Consumer>\n                );\n            }\n        }\n    );\n}\n"]}