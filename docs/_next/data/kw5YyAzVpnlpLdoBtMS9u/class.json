{"pageProps":{"title":"Classes","docs":{"handwritten":[{"into":"GraphQLQuery","src":"GraphQLQuery.md","frontmatter":{},"sections":[{"stub":"example","title":"Example","level":3,"content":"<pre><pre class=\"prism-code language-js p-3\" style=\"color:#393A34;background-color:#f6f8fa\"><div class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// language=GraphQL</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> myMutation </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">GraphQLQuery</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string string\" style=\"color:#e3116c\"></span></div><div class=\"token-line\" style=\"color:#393A34\"><span class=\"token template-string string\" style=\"color:#e3116c\">        mutation myMutation($fooo: String!){</span></div><div class=\"token-line\" style=\"color:#393A34\"><span class=\"token template-string string\" style=\"color:#e3116c\">            myMutation(foo: $foo)</span></div><div class=\"token-line\" style=\"color:#393A34\"><span class=\"token template-string string\" style=\"color:#e3116c\">        }</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\">\n</span></div></pre></pre><p>We most commonly use the declarative variant <a href=\"/misc/#graphql\">graphql</a> to enable data injection.</p>"}],"toc":{"level":3,"name":"example","title":"Example","headings":[]}}],"docs":{"GraphQLQuery":{"name":"GraphQLQuery","source":"src/GraphQLQuery.js","description":{"description":"GraphQL query abstraction for both GraphQL queries and mutations.\n\nCan be used to parse application queries only once and then .execute() them.\n\nThe graphql service will always create a new instance of GraphQLQuery on every request otherwise.","tags":[]},"group":"CLASS","reactDocGen":null,"start":14,"end":75,"members":[{"type":"ClassMethod","name":"constructor","description":{"description":"Create a new GraphQLQuery instance","tags":[{"title":"param","description":"query string","type":{"type":"NameExpression","name":"String"},"name":"query"},{"title":"param","description":"default variables for the query","type":{"type":"NameExpression","name":"object"},"name":"vars"}]},"decorators":[]},{"type":"ClassMethod","name":"getQueryDefinition","description":{"description":"Lazily parses the query string of this query and returns result.","tags":[{"title":"return","description":null,"type":{"type":"NameExpression","name":"QueryDefinition"}}]},"decorators":[]},{"type":"ClassMethod","name":"execute","description":{"description":"Executes this GraphQL query/mutation with the given variables","tags":[]},"decorators":[]},{"type":"ClassMethod","name":"clone","description":{"description":"Clone this query object.","tags":[{"title":"return","description":"new graphql query","type":{"type":"NameExpression","name":"GraphQLQuery"}}]},"decorators":[]}],"category":null,"link":"class#GraphQLQuery"},"InteractiveQueryDefinition":{"name":"InteractiveQueryDefinition","source":"src/model/InteractiveQueryDefinition.js","description":{"description":"Encapsulates a query and a default query config as user-editable query definition","tags":[{"title":"category","description":"iquery"}]},"group":"CLASS","reactDocGen":null,"start":12,"end":24,"members":[],"category":"iquery","link":"class#InteractiveQueryDefinition"},"MergeOperation":{"name":"MergeOperation","source":"src/merge/MergeOperation.js","description":null,"group":"CLASS","reactDocGen":null,"start":1,"end":6,"members":[],"category":null,"link":"class#MergeOperation"},"ViewState":{"name":"ViewState","source":"src/process/ViewState.js","description":{"description":"Encapsulates the static view state in an automaton process. The process keeps the actual transition maps\nbound to process and scope for each of its states.","tags":[]},"group":"CLASS","reactDocGen":null,"start":16,"end":61,"members":[],"category":null,"link":"class#ViewState"},"WorkingSet":{"name":"WorkingSet","source":"src/WorkingSet.js","description":{"description":"Encapsulates a current set of changes to domain objects not yet persisted to the server-side.","tags":[]},"group":"CLASS","reactDocGen":null,"start":667,"end":1670,"members":[{"type":"ClassMethod","name":"registerBaseVersion","description":{"description":"Registers the base version of an object before changing it within the working set.\nIf an object with the same type and the same id is already registered, this method does\nnothing.","tags":[{"title":"param","description":"domain object to register the base version of. Can be a complex GraphQL output graph.","type":{"type":"NameExpression","name":"object"},"name":"domainObject"}]},"decorators":[]},{"type":"ClassMethod","name":"addNew","description":{"description":"Adds a domain object as new object.","tags":[{"title":"param","description":null,"type":null,"name":"domainObject"}]},"decorators":["action"]},{"type":"ClassMethod","name":"addChanges","description":{"description":"Adds a domain object as changed object. If it was formerly marked as new object, it will remain a new object, but\nwith updated contents.","tags":[{"title":"param","description":"domain object to register the base version of. Can be a complex GraphQL output graph.","type":{"type":"NameExpression","name":"object"},"name":"domainObject"}]},"decorators":["action"]},{"type":"ClassMethod","name":"markDeleted","description":{"description":"Marks a domain object as deleted. Marking an object with the same domain type / id combination as new or\nchanged will undo the the deletion.","tags":[{"title":"param","description":null,"type":null,"name":"domainObject"}]},"decorators":["action"]},{"type":"ClassMethod","name":"revert","description":{"description":"Reverts the changes for the given domain object in the working set.","tags":[{"title":"param","description":null,"type":null,"name":"domainObject"}]},"decorators":["action"]},{"type":"ClassMethod","name":"clear","description":{"description":"Forgets all changes.","tags":[]},"decorators":["action"]},{"type":"ClassMethod","name":"discard","description":{"description":"Discards all changes by reverting the observables registered as changed back to their original state","tags":[]},"decorators":["action"]},{"type":"ClassMethod","name":"lookup","description":{"description":"Looks up the currently stored observable for a given entity","tags":[{"title":"param","description":"entity type name","type":null,"name":"type"},{"title":"param","description":"entity id","type":null,"name":"id"},{"title":"returns","description":"entry containing the registered observable and the current WorkingSetStatus","type":{"type":"RecordType","fields":[{"type":"FieldType","key":"domainObject","value":{"type":"NameExpression","name":"object"}},{"type":"FieldType","key":"status","value":{"type":"NameExpression","name":"String"}}]}}]},"decorators":[]},{"type":"ClassMethod","name":"isModified","description":{"description":"Returns true, if there are actual modifications for the given entity, that is either one of its fields changed or\na many-to-many connected entity changed","tags":[{"title":"param","description":"entity object or domain type","type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Object"},{"type":"NameExpression","name":"String"}]},"name":"entity"}]},"decorators":[]},{"type":"ClassMethod","name":"lookupBase","description":{"description":"Looks up the base object for an given entity","tags":[{"title":"param","description":"entity type name","type":null,"name":"type"},{"title":"param","description":"entity id","type":null,"name":"id"},{"title":"returns","description":"non-observable base object","type":{"type":"NameExpression","name":"object"}}]},"decorators":[]},{"type":"ClassMethod","name":"changes","description":{"description":"Returns the array of changed domain objects except for the deletions","tags":[{"title":"returns","description":"array with new or modified objects","type":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Object"}]}}]},"decorators":["computed"]},{"type":"ClassMethod","name":"newObjects","description":{"description":"Returns an array of new objects of the given type. if no type is given, all new objects are returned.","tags":[]},"decorators":[]},{"type":"ClassMethod","name":"deletions","description":{"description":"Returns the registered deletions in this working set.","tags":[{"title":"returns","description":"array with deleted objects","type":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"WorkingSetDeletion"}]}}]},"decorators":["computed"]},{"type":"ClassMethod","name":"merge","description":{"description":"Merges the current changes contained in the working set using the merge functionality and resets the working set.","tags":[{"title":"returns","description":"Promise resolving with the merge-result","type":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Promise"},"applications":[{"type":"AllLiteral"}]}}]},"decorators":["action"]}],"category":null,"link":"class#WorkingSet"},"WorkingSetStatus":{"name":"WorkingSetStatus","source":"src/WorkingSet.js","description":null,"group":"CLASS","reactDocGen":null,"start":113,"end":118,"members":[],"category":null,"link":"class#WorkingSetStatus"}},"classes":["GraphQLQuery","InteractiveQueryDefinition","MergeOperation","ViewState","WorkingSet","WorkingSetStatus"]}},"__N_SSG":true}